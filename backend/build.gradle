/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'

    implementation group: 'org.eclipse.jetty', name: 'jetty-server', version: '11.0.7'

    implementation group: 'org.eclipse.jetty', name: 'jetty-webapp', version: '11.0.7'

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.7'

    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.18'

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.1'

    implementation group: 'org.eclipse.jetty', name: 'jetty-servlets', version: '11.0.8'


    implementation group: 'commons-codec', name: 'commons-codec', version: '1.11'


}

application {
    // Define the main class for the application.
    mainClassName = 'it.unicam.cs.pawn.ricettacolo.App'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}
